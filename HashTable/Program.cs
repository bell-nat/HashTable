using HashTable;
/*
 Заполнить хэш-таблицу для следующего набора данных:
   'Водоросли': 		280
   'Картофель': 		260
   'Лук-порей': 		59
   'Манго': 		291
   'Орехи грецкие': 	266
   'Салями': 		225
   'Специи': 		283
   'Сыр сливочный': 	152
   'Творог': 		215
   'Тофу': 		142
   'Хек': 			248
   'Чай черный': 	118
   'Чернила каракатицы': 95
   'Шампиньоны': 	101
   'Финик': 		104
   
   
   Хэш-функция работает следующим образом: вычисляет длину ключа (название - name) делит на 20 – получившийся
   остаток от деления является хэшом. Для разрешения коллизий использовать метод открытой адресации (линейное пробирование).
   После добавления всего набора данных выполнить удаление из хэш-таблицы следующие данные, в том порядке, в котором они представлены: 
   'Орехи грецкие': 	266
   'Водоросли': 		280
   'Специи': 		283
   'Манго': 		291
 */
Table table = new ();
table.TryAdd("Водоросли", 280);
table.TryAdd("Картофель", 260);
table.TryAdd("Лук-порей", 59);
table.TryAdd("Манго", 291);
table.TryAdd("Орехи грецкие", 266);
table.TryAdd("Салями", 225);
table.TryAdd("Специи", 283);
table.TryAdd("Сыр сливочный", 152);
table.TryAdd("Творог", 215);
table.TryAdd("Тофу", 142);
table.TryAdd("Хек", 248);
table.TryAdd("Чай чёрный", 118);
table.TryAdd("Чернила каракатицы", 95);
table.TryAdd("Шампиньоны", 101);
table.TryAdd("Финик", 104);
table.View();

table.Remove("Орехи грецкие");
table.Remove("Водоросли");
table.Remove("Специи");
table.Remove("Манго");

table.View();

Console.ReadKey();